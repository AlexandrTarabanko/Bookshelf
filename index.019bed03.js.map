{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/slider-set.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/api/fonds-info.js","node_modules/@parcel/runtime-js/lib/runtime-7ac1c748b644a7ae.js","node_modules/@parcel/runtime-js/lib/runtime-727d21bdf42c418b.js","node_modules/@parcel/runtime-js/lib/runtime-bb8e2a4838b0fd97.js","node_modules/@parcel/runtime-js/lib/runtime-8c8934bdbc82b3b4.js","node_modules/@parcel/runtime-js/lib/runtime-3153dd93e2635e76.js","node_modules/@parcel/runtime-js/lib/runtime-ea748e7d884f4584.js","node_modules/@parcel/runtime-js/lib/runtime-1fffcd26a10e3889.js","node_modules/@parcel/runtime-js/lib/runtime-e6dd210c03ae60ae.js","node_modules/@parcel/runtime-js/lib/runtime-14c4df94a4bff504.js","node_modules/@parcel/runtime-js/lib/runtime-cdac2d378f435566.js","node_modules/@parcel/runtime-js/lib/runtime-fce708488f3900d9.js","node_modules/@parcel/runtime-js/lib/runtime-32f063891a8f672e.js","node_modules/@parcel/runtime-js/lib/runtime-4432689313059592.js","node_modules/@parcel/runtime-js/lib/runtime-3a0be4e113ab37f3.js","node_modules/@parcel/runtime-js/lib/runtime-bb4ea5eb0a64b36f.js","node_modules/@parcel/runtime-js/lib/runtime-c3d0bbac8f7d7545.js","node_modules/@parcel/runtime-js/lib/runtime-ed478f609f5f8198.js","node_modules/@parcel/runtime-js/lib/runtime-6dd6e46ac9f0aaac.js","node_modules/@parcel/runtime-js/lib/runtime-18333e1930ef3b1f.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","// Slider\nimport Swiper, { Navigation } from 'swiper';\nimport 'swiper/swiper-bundle.css';\nimport fondsInfo from './api/fonds-info.js';\n\nSwiper.use([Navigation]);\n\nfunction generateSlides() {\n  const isMobile = window.innerWidth < 768;\n  const slidesPerView = isMobile ? 4 : 6;\n  let allSlides;\n\n  if (fondsInfo.length > slidesPerView * 2) {\n    allSlides = fondsInfo;\n  } else {\n    allSlides = [...fondsInfo, ...fondsInfo];\n  }\n\n  let swiper;\n\n  function updateSlider() {\n    if (swiper) {\n      swiper.update();\n    }\n  }\n\n  function handleResize() {\n    updateSlider();\n  }\n\n  const swiperOptions = {\n    direction: 'vertical',\n    loop: true,\n    slidesPerView: slidesPerView,\n    spaceBetween: 20,\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n  };\n\n  swiper = new Swiper('.swiper-container', swiperOptions);\n\n  allSlides.forEach((slide, index) => {\n    const originalIndex = index % fondsInfo.length;\n    const slideHTML = `\n      <div class=\"swiper-slide\">\n        <div class=\"slide__content\">\n          <div class=\"slide__number\">${(originalIndex + 1)\n            .toString()\n            .padStart(2, '0')}</div>\n          <a href=\"${slide.url}\" class=\"slider__link\" target=\"blank\">\n            <img srcset=\"${slide.img.imageUrl.href}, ${\n      slide.img.retinaImageUrl.href\n    } 2x\" \n            src=\"${slide.img.imageUrl.href}\"\n            alt=\"${slide.title}\" \n            class=\"slider__png\">\n          </a>\n        </div>\n      </div>\n    `;\n    document\n      .querySelector('.swiper-wrapper')\n      .insertAdjacentHTML('beforeend', slideHTML);\n  });\n\n  updateSlider();\n\n  window.addEventListener('resize', handleResize);\n}\n\ndocument.addEventListener('DOMContentLoaded', generateSlides);\n","/**\n * Swiper 9.3.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 15, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null,\n      noMousewheelClass: 'swiper-no-mousewheel'\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n\n    // Ignore event if the target or its parents have the swiper-no-mousewheel class\n    if (event.target.closest(`.${swiper.params.mousewheel.noMousewheelClass}`)) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      if (typeof newIndex === 'undefined' || Number.isNaN(newIndex)) return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","\nconst fondsInfo = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: {\n      imageUrl: new URL(\n        '../../images/png-icons/fonds/children.png?as=webp&width=129',\n        import.meta.url\n      ),\n      retinaImageUrl: new URL(\n        '../../images/png-icons/fonds/children@2x.png?as=webp&width=258',\n        import.meta.url\n      ),\n    },\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: {\n      imageUrl: new URL(\n        '../../images/png-icons/fonds/hope.png?as=webp&width=62',\n        import.meta.url\n      ),\n      retinaImageUrl: new URL(\n        '../../images/png-icons/fonds/hope@2x.png?as=webp&width=124',\n        import.meta.url\n      ),\n    },\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: {\n      imageUrl: new URL(\n        '../../images/png-icons/fonds/med-corps.png?as=webp&width=103',\n        import.meta.url\n      ),\n      retinaImageUrl: new URL(\n        '../../images/png-icons/fonds/med-corps@2x.png?as=webp&width=206',\n        import.meta.url\n      ),\n    },\n  },\n\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: {\n      imageUrl: new URL(\n        '../../images/png-icons/fonds/razom.png?as=webp&width=82',\n        import.meta.url\n      ),\n      retinaImageUrl: new URL(\n        '../../images/png-icons/fonds/razom@2x.png?as=webp&width=164',\n        import.meta.url\n      ),\n    },\n  },\n\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: {\n      imageUrl: new URL(\n        '../../images/png-icons/fonds/hunger.png?as=webp&width=55',\n        import.meta.url\n      ),\n      retinaImageUrl: new URL(\n        '../../images/png-icons/fonds/hunger@2x.png?as=webp&width=110',\n        import.meta.url\n      ),\n    },\n  },\n\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: {\n      imageUrl: new URL(\n        '../../images/png-icons/fonds/prytula.png?as=webp&width=115',\n        import.meta.url\n      ),\n      retinaImageUrl: new URL(\n        '../../images/png-icons/fonds/prytula@2x.png?as=webp&width=230',\n        import.meta.url\n      ),\n    },\n  },\n\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: {\n      imageUrl: new URL(\n        '../../images/png-icons/fonds/united.png?as=webp&width=129',\n        import.meta.url\n      ),\n      retinaImageUrl: new URL(\n        '../../images/png-icons/fonds/united@2x.png?as=webp&width=258',\n        import.meta.url\n      ),\n    },\n  },\n\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: {\n      imageUrl: new URL(\n        '../../images/png-icons/fonds/frontieres.png?as=webp&width=114',\n        import.meta.url\n      ),\n      retinaImageUrl: new URL(\n        '../../images/png-icons/fonds/frontieres@2x.png?as=webp&width=228',\n        import.meta.url\n      ),\n    },\n  },\n\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: {\n      imageUrl: new URL(\n        '../../images/png-icons/fonds/vision.png?as=webp&width=60',\n        import.meta.url\n      ),\n      retinaImageUrl: new URL(\n        '../../images/png-icons/fonds/vision@2x.png?as=webp&width=120',\n        import.meta.url\n      ),\n    },\n  },\n];\n\nexport default fondsInfo;","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hqAH2\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6LlgK\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9Gf7W\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"99QCF\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iFVV1\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"aM4wR\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9s0lL\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4ri52\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"htXju\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hncvI\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hQwT7\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3jtGW\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"gsaFc\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hDlOt\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1dJVe\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9IBIa\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lGW23\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6TyfE\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"jr74s\\\":\\\"index.019bed03.js\\\",\\\"hqAH2\\\":\\\"children.02e360f0.webp\\\",\\\"6LlgK\\\":\\\"children@2x.8a8a1393.webp\\\",\\\"9Gf7W\\\":\\\"hope.65bd87f9.webp\\\",\\\"99QCF\\\":\\\"hope@2x.912cf72c.webp\\\",\\\"iFVV1\\\":\\\"med-corps.f2077b9a.webp\\\",\\\"aM4wR\\\":\\\"med-corps@2x.3a845a76.webp\\\",\\\"9s0lL\\\":\\\"razom.3a5ccf3b.webp\\\",\\\"4ri52\\\":\\\"razom@2x.dd36c933.webp\\\",\\\"htXju\\\":\\\"hunger.98f3c460.webp\\\",\\\"hncvI\\\":\\\"hunger@2x.7b8ec5d1.webp\\\",\\\"hQwT7\\\":\\\"prytula.f0805ebd.webp\\\",\\\"3jtGW\\\":\\\"prytula@2x.9631e293.webp\\\",\\\"gsaFc\\\":\\\"united.c46ae387.webp\\\",\\\"hDlOt\\\":\\\"united@2x.7edd5c8b.webp\\\",\\\"1dJVe\\\":\\\"frontieres.a8475b89.webp\\\",\\\"9IBIa\\\":\\\"frontieres@2x.04bfff31.webp\\\",\\\"lGW23\\\":\\\"vision.968858b2.webp\\\",\\\"6TyfE\\\":\\\"vision@2x.ee540a55.webp\\\",\\\"6LQ1T\\\":\\\"index.9fc21abc.css\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$iSRJB","parcelRequire","$iaGrY","default","use","document","addEventListener","slidesPerView","window","innerWidth","allSlides","swiper","updateSlider","update","$77fbN","swiperOptions","direction","loop","spaceBetween","navigation","nextEl","prevEl","forEach","slide","index","slideHTML","toString","padStart","url","img","imageUrl","href","retinaImageUrl","title","querySelector","insertAdjacentHTML","$7xxPi","$d3aa16e5c5539775$var$prototypes","$mPJF1","$jEOyI","$4HaqR","$b4Co2","$jtnqo","$7Q6KL","$lt8Bz","$i1StC","$6Vw97","$5rbog","$5IPB6","$d3aa16e5c5539775$var$extendedDefaults","$d3aa16e5c5539775$var$Swiper","constructor","args","el","params","prototype","call","slice","$dNWnP","extend","document1","getDocument","querySelectorAll","swipers","containerEl","newParams","push","this","__swiper__","support","$1gHsq","getSupport","device","$agupX","getDevice","userAgent","browser","$kMnIR","getBrowser","eventsListeners","eventsAnyListeners","modules","__modules__","Array","isArray","allModulesParams","mod","extendParams","$kmZuC","on","bind","once","off","emit","swiperParams","$1AMhv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","translate","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","getSlideIndex","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","filter","getAttribute","recalcSlides","enable","grabCursor","setGrabCursor","disable","unsetGrabCursor","setProgress","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","join","getSlideClasses","destroyed","emitSlidesClasses","updates","slidesPerViewDynamic","view","exact","size","swiperSize","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","setTranslate","translateValue","rtlTranslate","newTranslate","translated","breakpoints","setBreakpoint","imageEl","complete","$fa3Xa","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","classList","remove","add","style","width","height","changeLanguageDirection","rtl","dir","mount","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","target","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","static","newDefaults","extendedDefaults","defaults","module","m","installModule","prototypeGroup","protoMethod","$kdpim","$c4Sz9","$d3aa16e5c5539775$export$2e2bcd8739ae039","$57d5daab652ed4f7$var$isObject","obj","$57d5daab652ed4f7$export$8b58be045bf06082","src","key","$57d5daab652ed4f7$export$3fdcb9b4d81368d8","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","origin","pathname","protocol","search","$57d5daab652ed4f7$export$f65ca476c09acec0","doc","$57d5daab652ed4f7$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$57d5daab652ed4f7$export$38b2d434cce3ea22","win","$a0cd23a932383e06$export$8694e5c03a4df8e6","object","$a0cd23a932383e06$export$bdd553fddd433dcb","delay","$a0cd23a932383e06$export$461939dd4422153","now","$a0cd23a932383e06$export$5ec402b7fcf74398","axis","window1","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$a0cd23a932383e06$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","map","a","replace","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$a0cd23a932383e06$export$a6cdc56e425d0d0a","o","$a0cd23a932383e06$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$a0cd23a932383e06$export$a607267f322101fd","varName","varValue","setProperty","$a0cd23a932383e06$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","time","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$a0cd23a932383e06$export$616841b86f802685","$a0cd23a932383e06$export$eb846d859f2895e6","selector","matches","$a0cd23a932383e06$export$c8a8987d4410bf2d","tag","classes","$a0cd23a932383e06$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$a0cd23a932383e06$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$a0cd23a932383e06$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$a0cd23a932383e06$export$4184470d4bd0f986","prop","$a0cd23a932383e06$export$371885c503a01623","child","previousSibling","$a0cd23a932383e06$export$aedc7b608ca8e855","parents","parent","parentElement","$a0cd23a932383e06$export$6b974c5889da0bb5","fireCallBack","$a0cd23a932383e06$export$863f37913038cf77","includeMargins","offsetWidth","$0ec8fed4d94b7d0e$var$support","$0ec8fed4d94b7d0e$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$0ec8fed4d94b7d0e$var$calcSupport","$7792fe51e58fd98a$var$deviceCached","$7792fe51e58fd98a$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","os","$7792fe51e58fd98a$var$calcDevice","$f20ab12260e3c8aa$var$browser","$f20ab12260e3c8aa$export$89e15fc796a4a429","needPerspectiveFix","isSafari","String","includes","major","minor","num","Number","isWebView","test","$f20ab12260e3c8aa$var$calcBrowser","$eb78a4a6fe62148c$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$8cb02f6e7ce8fb4d$export$2e2bcd8739ae039","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$044a2fc60b096a26$export$2e2bcd8739ae039","events","handler","priority","self","method","event","onceHandler","__emitterProxy","apply","offAny","eventHandler","data","context","unshift","$2nlfG","$e4f8f8ad9cb19e91$export$2e2bcd8739ae039","$aafDk","$jMtU7","$kPOBn","$8OSjY","$hBtS3","$29hok","$lCVGa","$3EEt9","$1bae36ef23f50f9c$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$7666f706306747b4$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$e669b25e9df72d3e$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$f2afd2868f8e8bc2$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$66bd21459a070ee6$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$cd0d10153bc4aa64$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$1909e99c7f96a783$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$fbe9e371bf7fd468$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$fbe9e371bf7fd468$export$81ecffcda7ad6ebb","skip","$b09adb3584f4f5c0$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$b09adb3584f4f5c0$var$unlazy","$b09adb3584f4f5c0$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","rewind","$2a947fda846258ea$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1umi3","$36b34534f351ba31$export$2e2bcd8739ae039","$1vvVW","$jVKXc","$a9I2T","$fzQVA","$1159e22d2ec30d20$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$119175075d742233$export$2e2bcd8739ae039","byController","x","y","newProgress","$03be93aa6759504c$export$2e2bcd8739ae039","$764ce935999ac3a7$export$2e2bcd8739ae039","$b5732e441af1da9c$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","$e2mnO","$80fdd84039bf9f36$export$2e2bcd8739ae039","$C1QMZ","$3QxHx","$a3829d6301edc915$export$2e2bcd8739ae039","transitionDuration","$g81jD","$0724fc2edc847bc2$export$2e2bcd8739ae039","step","$bbde69f506a53967$export$2e2bcd8739ae039","$2cd05ec7ceec4531$export$2e2bcd8739ae039","$VoUIG","$e2d2e56ba51214aa$export$2e2bcd8739ae039","$hma03","$cNUv0","$73yc0","$30lE7","$6K2nc","$k6ufv","$0ac8a65aa579cc54$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$ca2c3f7f2b80cb2e$export$2e2bcd8739ae039","newIndex","$9525e32ea72263e1$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$523356300376327b$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$230229aaaf399bb3$export$2e2bcd8739ae039","$4e88e13af59bc0c1$export$2e2bcd8739ae039","threshold","currentSnap","$ea2bd50b7bab181f$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$jAQHU","$5b52a0cd14268ef0$export$2e2bcd8739ae039","$iefk9","$8TQCt","$e43a43ab7da51df1$export$2e2bcd8739ae039","slideRealIndex","$d4556bd6c5a7f2d0$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$67ac46f20fbdf8d4$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$8kBkW","$fa12fb2ee5c28987$export$2e2bcd8739ae039","$lGUvJ","$610d2748ae2a3d7a$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$fca95b10f60c741c$export$2e2bcd8739ae039","$d20293ed7c4414e4$var$dummyEventAttached","$d20293ed7c4414e4$var$dummyEventListener","$d20293ed7c4414e4$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$i41Or","onLoad","$d20293ed7c4414e4$export$2e2bcd8739ae039","$iDuHK","$hwZYB","$7UVOE","$lI65j","$9A257","$7V4dh","$d913afca7372dc81$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$d913afca7372dc81$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$cc35800f8eced6b5$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$5c3a9c649f4b5f25$export$2e2bcd8739ae039","type","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","$d26a01a5d69e1b50$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$6f991739d9bf88be$export$2e2bcd8739ae039","stopImmediatePropagation","$fce26d50c7e61a92$export$2e2bcd8739ae039","$5c411feff72a52ef$export$2e2bcd8739ae039","$6iUdR","$50b100814b3eeec4$export$2e2bcd8739ae039","$kp9jL","$4970091fac3b5d77$var$isGridEnabled","$4970091fac3b5d77$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$edad5ec5e4a0f3c0$export$2e2bcd8739ae039","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","b","$lHwXw","$42a915ff7a2ae30b$export$2e2bcd8739ae039","$e5Gui","$fcc72e1d6455c726$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","item","$fcc72e1d6455c726$var$prepareClasses","autoheight","centered","$a4227d791ec395d4$export$2e2bcd8739ae039","$3f584f40558f8bb9$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$128e9ae4dc5cc7e1$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$ed458fea3043c525$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$e2yAf","$dbf6f3b26ef5d33c$export$2e2bcd8739ae039","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","disabled","subEl","tagName","onPrevClick","slidePrev","onNextClick","slideNext","initButton","destroyButton","_s","pagination","clickable","isHidden","toggle","$a38c14293bf6942a$export$2e2bcd8739ae039","checkProps","$a59367f5a43a662f$export$2e2bcd8739ae039","$b3f342b4a3f8a5f2$export$2e2bcd8739ae039","appendElement","tempDOM","innerHTML","$0b71822481728c98$export$2e2bcd8739ae039","prependElement","$5e5e77ec41ddd74a$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$5dc678a0b70a1ea8$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$9fd743be1d735d66$export$2e2bcd8739ae039","removeSlide","$fe3c58194e0402ae$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","slideShadows","$fac719e250553c76$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$42fdb4152f52aa22$export$2e2bcd8739ae039","transformElements","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$3a65e8106b617bf7$export$2e2bcd8739ae039","shadowClass","shadowContainer","$52e4f820c00db081$export$2e2bcd8739ae039","URL","exports","resolve","register","JSON","parse"],"version":3,"file":"index.019bed03.js.map"}